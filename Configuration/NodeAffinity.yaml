## primary feature of NodeAffinity is to constrain which nodes your pod is eligible to be scheduled on, based on labels on the node.

apiVersion: v1
kind: Pod
metadata:
  name: myapp-pod
spec:
  containers:
  - name: data-processor
    image: data-processor
  affinity:
    NodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: size
            operator: In ## In operator is used for matching values in a list, other operators are NotIn, Exists, DoesNotExist, Gt, Lt
            values:
            - large
            - medium


## the type of node affinity defines the rules for node selection
### requiredDuringSchedulingIgnoredDuringExecution: the pod will only be scheduled on nodes that meet the criteria
### preferredDuringSchedulingIgnoredDuringExecution: the pod will prefer to be scheduled on nodes that meet

# 2 states in the lifecycle of a pod -- 1. During Scheduling 2. During Execution
## During Scheduling: the scheduler checks the node affinity rules to determine which nodes are eligible for scheduling
## During Execution: the pod is running on a node, and the node affinity rules are not enforced 

## New type of affinity is requiredDuringSchedulingRequiredDuringExecution
### this type of affinity is used when you want to ensure that the pod is always running on a node that meets the criteria, even if the node's labels change after the pod has been scheduled
